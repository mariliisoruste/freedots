# MusicXML™ score.mod module
# 
# Version 2.0 - 10 July 2007
# 
# Copyright © 2004-2007 Recordare LLC.
# http://www.recordare.com/
# 
# This MusicXML™ work is being provided by the copyright
# holder under the MusicXML Document Type Definition 
# Public License Version 2.0, available from:
# 
#	http://www.recordare.com/dtds/license.html

# Works and movements are optionally identified by number
# and title. The work element also may indicate a link
# to the opus document that composes multiple movements
# into a collection.

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

element-work =
  element work {
    attlist-work,
    element-work-number?,
    element-work-title?,
    element-opus?
  }
attlist-work &= empty
element-work-number = element work-number { attlist-work-number, text }
attlist-work-number &= empty
element-work-title = element work-title { attlist-work-title, text }
attlist-work-title &= empty
element-opus = element opus { attlist-opus, empty }
attlist-opus &= link-attributes
element-movement-number =
  element movement-number { attlist-movement-number, text }
attlist-movement-number &= empty
element-movement-title =
  element movement-title { attlist-movement-title, text }
attlist-movement-title &= empty
# Collect score-wide defaults. This includes scaling
# and layout, defined in layout.mod, and default values
# for the music font, word font, lyric font, and 
# lyric language. The number and name attributes in
# lyric-font and lyric-language elements are typically
# used when lyrics are provided in multiple languages.
# If the number and name attributes are omitted, the 
# lyric-font and lyric-language values apply to all 
# numbers and names.
element-defaults =
  element defaults {
    attlist-defaults,
    element-scaling?,
    element-page-layout?,
    element-system-layout?,
    element-staff-layout*,
    element-appearance?,
    element-music-font?,
    element-word-font?,
    element-lyric-font*,
    element-lyric-language*
  }
attlist-defaults &= empty
element-music-font = element music-font { attlist-music-font, empty }
attlist-music-font &= font
element-word-font = element word-font { attlist-word-font, empty }
attlist-word-font &= font
element-lyric-font = element lyric-font { attlist-lyric-font, empty }
attlist-lyric-font &=
  attribute number { xsd:NMTOKEN }?,
  attribute name { text }?,
  font
element-lyric-language =
  element lyric-language { attlist-lyric-language, empty }
attlist-lyric-language &=
  attribute number { xsd:NMTOKEN }?,
  attribute name { text }?,
  attribute xml:lang { xsd:NMTOKEN }
# Credit elements refer to the title, composer, arranger,
# lyricist, copyright, dedication, and other text that usually
# appears on the first page of a score. The credit-words
# and credit-image elements are similar to the words and
# image elements for directions. However, since the 
# credit is not part of a measure, the default-x and 
# default-y attributes adjust the origin relative to the 
# bottom left-hand corner of the first page. The 
# enclosure for credit-words is none by default.
# 
# By default, a series of credit-words elements within a
# single credit element follow one another in sequence
# visually. Non-positional formatting attributes are carried
# over from the previous element by default.
# 
# The page attribute for the credit element, new in Version
# 2.0, specifies the page number where the credit should
# appear. This is an integer value that starts with 1 for the
# first page. Its value is 1 by default. Since credits occur
# before the music, these page numbers do not refer to the
# page numbering specified by the print element's page-number
# attribute.
# 
# In the initial release of Version 2.0, the credit element
# had a non-deterministic definition. The current credit
# element definition has the same meaning, but avoids the
# validity errors arising from a non-deterministic definition.
element-credit =
  element credit {
    attlist-credit,
    element-link*,
    element-bookmark*,
    (element-credit-image
     | (element-credit-words,
        (element-link*, element-bookmark*, element-credit-words)*))
  }
attlist-credit &= attribute page { xsd:NMTOKEN }?
element-credit-words =
  element credit-words { attlist-credit-words, text }
attlist-credit-words &= text-formatting
element-credit-image =
  element credit-image { attlist-credit-image, empty }
attlist-credit-image &=
  attribute source { text },
  attribute type { text },
  position,
  halign,
  valign-image
# The part-list identifies the different musical parts in
# this movement. Each part has an ID that is used later
# within the musical data. Since parts may be encoded
# separately and combined later, identification elements
# are present at both the score and score-part levels.
# There must be at least one score-part, combined as
# desired with part-group elements that indicate braces
# and brackets. Parts are ordered from top to bottom in
# a score based on the order in which they appear in the
# part-list.
# 
# Each MusicXML part corresponds to a track in a Standard
# MIDI Format 1 file. The score-instrument elements are
# used when there are multiple instruments per track.
# The midi-device element is used to make a MIDI device
# or port assignment for the given track. Initial
# midi-instrument assignments may be made here as well.
# 
# The part-name and part-abbreviation elements are defined
# in the common.mod file, as they can be used within both the
# part-list and print elements.
element-part-list =
  element part-list {
    attlist-part-list,
    element-part-group*,
    element-score-part,
    (element-part-group | element-score-part)*
  }
attlist-part-list &= empty
element-score-part =
  element score-part {
    attlist-score-part,
    element-identification?,
    element-part-name,
    element-part-name-display?,
    element-part-abbreviation?,
    element-part-abbreviation-display?,
    element-group*,
    element-score-instrument*,
    element-midi-device?,
    element-midi-instrument*
  }
attlist-score-part &= attribute id { xsd:ID }
# The part-name indicates the full name of the musical part.
# The part-abbreviation indicates the abbreviated version of
# the name of the musical part. The part-name will often
# precede the first system, while the part-abbreviation will
# precede the other systems. The formatting attributes for
# these elements are deprecated in Version 2.0 in favor of
# the new part-name-display and part-abbreviation-display
# elements. These are defined in the common.mod file as they
# are used in both the part-list and print elements. They
# provide more complete formatting control for how part names
# and abbreviations appear in a score.
element-part-name = element part-name { attlist-part-name, text }
attlist-part-name &= print-style, print-object, justify
element-part-abbreviation =
  element part-abbreviation { attlist-part-abbreviation, text }
attlist-part-abbreviation &= print-style, print-object, justify
# The part-group element indicates groupings of parts in the
# score, usually indicated by braces and brackets. Braces
# that are used for multi-staff parts should be defined in
# the attributes element for that part. The part-group start
# element appears before the first score-part in the group.
# The part-group stop element appears after the last 
# score-part in the group.
# 
# The number attribute is used to distinguish overlapping
# and nested part-groups, not the sequence of groups. As
# with parts, groups can have a name and abbreviation.
# Formatting attributes for group-name and group-abbreviation
# are deprecated in Version 2.0 in favor of the new
# group-name-display and group-abbreviation-display elements.
# Formatting specified in the group-name-display and
# group-abbreviation-display elements overrides formatting
# specified in the group-name and group-abbreviation
# elements, respectively.
# 
# The group-symbol element indicates how the symbol for
# a group is indicated in the score. Values include none,
# brace, line, and bracket; the default is none. The 
# group-barline element indicates if the group should have
# common barlines. Values can be yes, no, or Mensurstrich.
# The group-time element indicates that the displayed time
# signatures should stretch across all parts and staves in
# the group. Values for the child elements are ignored at
# the stop of a group. 
# 
# A part-group element is not needed for a single multi-staff
# part. By default, multi-staff parts include a brace symbol
# and (if appropriate given the bar-style) common barlines.
# The symbol formatting for a multi-staff part can be more
# fully specified using the part-symbol element, defined in
# the attributes.mod file.
element-part-group =
  element part-group {
    attlist-part-group,
    element-group-name?,
    element-group-name-display?,
    element-group-abbreviation?,
    element-group-abbreviation-display?,
    element-group-symbol?,
    element-group-barline?,
    element-group-time?,
    editorial
  }
attlist-part-group &=
  attribute type { start-stop },
  [ a:defaultValue = "1" ] attribute number { text }?
element-group-name = element group-name { attlist-group-name, text }
attlist-group-name &= print-style, justify
element-group-name-display =
  element group-name-display {
    attlist-group-name-display,
    (element-display-text | element-accidental-text)*
  }
attlist-group-name-display &= print-object
element-group-abbreviation =
  element group-abbreviation { attlist-group-abbreviation, text }
attlist-group-abbreviation &= print-style, justify
element-group-abbreviation-display =
  element group-abbreviation-display {
    attlist-group-abbreviation-display,
    (element-display-text | element-accidental-text)*
  }
attlist-group-abbreviation-display &= print-object
element-group-symbol =
  element group-symbol { attlist-group-symbol, text }
attlist-group-symbol &= position, color
element-group-barline =
  element group-barline { attlist-group-barline, text }
attlist-group-barline &= color
element-group-time = element group-time { attlist-group-time, empty }
attlist-group-time &= empty
# The score-instrument element allows for multiple
# instruments per score-part. As with the score-part
# element, each score-instrument has a required ID
# attribute, a name, and an optional abbreviation. The
# instrument-name and instrument-abbreviation are
# typically used within a software application, rather
# than appearing on the printed page of a score.
# 
# A score-instrument element is also required if the
# score specifies MIDI 1.0 channels, banks, or programs.
# An initial midi-instrument assignment can also
# be made here. MusicXML software should be able to
# automatically assign reasonable channels and 
# instruments without these elements in simple cases,
# such as where part names match General MIDI
# instrument names.
# 
# The solo and ensemble elements are new as of Version
# 2.0. The solo element is present if performance is
# intended by a solo instrument. The ensemble element
# is present if performance is intended by an ensemble
# such as an orchestral section. The text of the 
# ensemble element contains the size of the section,
# or is empty if the ensemble size is not specified.
# 
# The midi-instrument element is defined in the common.mod
# file, as it can be used within both the score-part and
# sound elements.
element-score-instrument =
  element score-instrument {
    attlist-score-instrument,
    element-instrument-name,
    element-instrument-abbreviation?,
    (element-solo | element-ensemble)?
  }
attlist-score-instrument &= attribute id { xsd:ID }
element-instrument-name =
  element instrument-name { attlist-instrument-name, text }
attlist-instrument-name &= empty
element-instrument-abbreviation =
  element instrument-abbreviation {
    attlist-instrument-abbreviation, text
  }
attlist-instrument-abbreviation &= empty
element-solo = element solo { attlist-solo, empty }
attlist-solo &= empty
element-ensemble = element ensemble { attlist-ensemble, text }
attlist-ensemble &= empty
# The midi-device content corresponds to the DeviceName
# meta event in Standard MIDI Files. The optional port
# attribute is a number from 1 to 16 that can be used
# with the unofficial MIDI port (or cable) meta event.
element-midi-device = element midi-device { attlist-midi-device, text }
attlist-midi-device &= attribute port { text }?
# The group element allows the use of different versions of
# the part for different purposes. Typical values include
# score, parts, sound, and data. Ordering information that is
# directly encoded in MuseData can be derived from the
# ordering within a MusicXML score or opus.
element-group = element group { attlist-group, text }
attlist-group &= empty
# Here is the basic musical data that is either associated
# with a part or a measure, depending on whether partwise
# or timewise hierarchy is used.
music-data =
  (element-note
   | element-backup
   | element-forward
   | element-direction
   | element-attributes
   | element-harmony
   | element-figured-bass
   | element-print
   | element-sound
   | element-barline
   | element-grouping
   | element-link
   | element-bookmark)*
# The score-header entity contains basic score metadata
# about the work and movement, score-wide defaults for
# layout and fonts, credits that appear on the first page,
# and the part list. 
score-header =
  element-work?,
  element-movement-number?,
  element-movement-title?,
  element-identification?,
  element-defaults?,
  element-credit*,
  element-part-list
# In either format, the part element has an id attribute that
# is an IDREF back to a score-part in the part-list. Measures
# have a required number attribute (going from partwise to
# timewise, measures are grouped via the number).
attlist-part &= attribute id { xsd:IDREF }
# The implicit attribute is set to "yes" for measures where
# the measure number should never appear, such as pickup
# measures and the last half of mid-measure repeats. The
# value is "no" if not specified.
# 
# The non-controlling attribute is intended for use in
# multimetric music like the Don Giovanni minuet. If set
# to "yes", the left barline in this measure does not
# coincide with the left barline of measures in other
# parts. The value is "no" if not specified. 
# 
# In partwise files, the number attribute should be the same
# for measures in different parts that share the same left
# barline. While the number attribute is often numeric, it
# does not have to be. Non-numeric values are typically used
# together with the implicit or non-controlling attributes
# being set to "yes". For a pickup measure, the number
# attribute is typically set to "0" and the implicit attribute
# is typically set to "yes". Further details about measure
# numbering can be defined using the measure-numbering
# element defined in the direction.mod file
# 
# Measure width is specified in tenths. These are the
# global tenths specified in the scaling element, not
# local tenths as modified by the staff-size element.
attlist-measure &=
  attribute number { text },
  attribute implicit { yes-no }?,
  attribute non-controlling { yes-no }?,
  attribute width { tenths }?
