# MusicXML™ layout.mod module
# 
# Version 2.0 - 18 June 2007
# 
# Copyright © 2004-2007 Recordare LLC.
# http://www.recordare.com/
# 
# This MusicXML™ work is being provided by the copyright
# holder under the MusicXML Document Type Definition 
# Public License Version 2.0, available from:
# 
#	http://www.recordare.com/dtds/license.html

# Version 1.1 of the MusicXML format added layout information
# for pages, systems, staffs, and measures. These layout
# elements joined the print and sound elements in providing
# formatting data as elements rather than attributes.
# 
# Everything is measured in tenths of staff space. Tenths are
# then scaled to millimeters within the scaling element, used
# in the defaults element at the start of a score. Individual
# staves can apply a scaling factor to adjust staff size.
# When a MusicXML element or attribute refers to tenths,
# it means the global tenths defined by the scaling element,
# not the local tenths as adjusted by the staff-size element.

# Elements

# Margins, page sizes, and distances are all measured in
# tenths to keep MusicXML data in a consistent coordinate
# system as much as possible. The translation to absolute
# units is done in the scaling element, which specifies
# how many millimeters are equal to how many tenths. For
# a staff height of 7 mm, millimeters would be set to 7
# while tenths is set to 40. The ability to set a formula
# rather than a single scaling factor helps avoid roundoff
# errors.

element-scaling =
  element scaling {
    attlist-scaling, element-millimeters, element-tenths
  }
attlist-scaling &= empty
element-millimeters = element millimeters { attlist-millimeters, text }
attlist-millimeters &= empty
element-tenths = element tenths { attlist-tenths, layout-tenths }
attlist-tenths &= empty
# Margin elements are included within many of the larger
# layout elements.
element-left-margin =
  element left-margin { attlist-left-margin, layout-tenths }
attlist-left-margin &= empty
element-right-margin =
  element right-margin { attlist-right-margin, layout-tenths }
attlist-right-margin &= empty
element-top-margin =
  element top-margin { attlist-top-margin, layout-tenths }
attlist-top-margin &= empty
element-bottom-margin =
  element bottom-margin { attlist-bottom-margin, layout-tenths }
attlist-bottom-margin &= empty
# Page layout can be defined both in score-wide defaults
# and in the print element. Page margins are specified either
# for both even and odd pages, or via separate odd and even
# page number values. The type is not needed when used as
# part of a print element. If omitted when used in the
# defaults element, "both" is the default.
element-page-layout =
  element page-layout {
    attlist-page-layout,
    (element-page-height, element-page-width)?,
    (element-page-margins, element-page-margins?)?
  }
attlist-page-layout &= empty
element-page-height =
  element page-height { attlist-page-height, layout-tenths }
attlist-page-height &= empty
element-page-width =
  element page-width { attlist-page-width, layout-tenths }
attlist-page-width &= empty
element-page-margins =
  element page-margins {
    attlist-page-margins,
    element-left-margin,
    element-right-margin,
    element-top-margin,
    element-bottom-margin
  }
attlist-page-margins &= attribute type { "odd" | "even" | "both" }?
# System layout includes left and right margins and the
# vertical distance from the previous system. Margins are
# relative to the page margins. Positive values indent and
# negative values reduce the margin size. The system
# distance is measured from the bottom line of the previous
# system to the top line of the current system. It is ignored
# for the first system on a page. The top system distance
# is measured from the page's top margin to the top line
# of the first system. It is ignored for all but the first
# system on a page.
# 
# Sometimes the sum of measure widths in a system may not
# equal the system width specified by the layout elements due
# to roundoff or other errors. The behavior when reading
# MusicXML files in these cases is application-dependent.
# For instance, applications may find that the system layout
# data is more reliable than the sum of the measure widths,
# and adjust the measure widths accordingly.
element-system-layout =
  element system-layout {
    attlist-system-layout,
    element-system-margins?,
    element-system-distance?,
    element-top-system-distance?
  }
attlist-system-layout &= empty
element-system-margins =
  element system-margins {
    attlist-system-margins, element-left-margin, element-right-margin
  }
attlist-system-margins &= empty
element-system-distance =
  element system-distance { attlist-system-distance, layout-tenths }
attlist-system-distance &= empty
element-top-system-distance =
  element top-system-distance {
    attlist-top-system-distance, layout-tenths
  }
attlist-top-system-distance &= empty
# Staff layout includes the vertical distance from the bottom
# line of the previous staff in this system to the top line
# of the staff specified by the number attribute. The
# optional number attribute refers to staff numbers within
# the part, from top to bottom on the system. A value of 1
# is assumed if not present. When used in the defaults
# element, the values apply to all parts. This value is
# ignored for the first staff in a system.
element-staff-layout =
  element staff-layout { attlist-staff-layout, element-staff-distance? }
element-staff-distance =
  element staff-distance { attlist-staff-distance, layout-tenths }
attlist-staff-distance &= empty
attlist-staff-layout &= attribute number { text }?
# Measure layout includes the horizontal distance from the
# previous measure. This value is only used for systems
# where there is horizontal whitespace in the middle of a
# system, as in systems with codas. To specify the measure
# width, use the width attribute of the measure element.
element-measure-layout =
  element measure-layout {
    attlist-measure-layout, element-measure-distance?
  }
attlist-measure-layout &= empty
element-measure-distance =
  element measure-distance { attlist-measure-distance, layout-tenths }
attlist-measure-distance &= empty
# The appearance element controls general graphical
# settings for the music's final form appearance on a
# printed page of display. Currently this includes support
# for line widths and definitions for note sizes, plus an
# extension element for other aspects of appearance.
# 
# The line-width element indicates the width of a line type
# in tenths. The type attribute defines what type of line is
# being defined. Values include beam, bracket, dashes,
# enclosure, ending, extend, heavy barline, leger,
# light barline, octave shift, pedal, slur middle, slur tip,
# staff, stem, tie middle, tie tip, tuplet bracket, and
# wedge. The text content is expressed in tenths.
# 
# The note-size element indicates the percentage of the
# regular note size to use for notes with a cue and large
# size as defined in the type element. The grace type is
# used for notes of cue size that that include a grace
# element. The cue type is used for all other notes with 
# cue size, whether defined explicitly or implicitly via a 
# cue element. The large type is used for notes of large
# size. The text content represent the numeric percentage.
# A value of 100 would be identical to the size of a regular
# note as defined by the music font.
# 
# The other-appearance element is used to define any
# graphical settings not yet in the current version of the
# MusicXML format. This allows extended representation,
# though without application interoperability.
element-appearance =
  element appearance {
    attlist-appearance,
    element-line-width*,
    element-note-size*,
    element-other-appearance*
  }
attlist-appearance &= empty
element-line-width =
  element line-width { attlist-line-width, layout-tenths }
attlist-line-width &= attribute type { text }
element-note-size = element note-size { attlist-note-size, text }
attlist-note-size &= attribute type { "cue" | "grace" | "large" }
element-other-appearance =
  element other-appearance { attlist-other-appearance, text }
attlist-other-appearance &= attribute type { text }
