# MusicXML™ attributes.mod module
# 
# Version 2.0 - 18 June 2007
# 
# Copyright © 2004-2007 Recordare LLC.
# http://www.recordare.com/
# 
# This MusicXML™ work is being provided by the copyright
# holder under the MusicXML Document Type Definition 
# Public License Version 2.0, available from:
# 
#	http://www.recordare.com/dtds/license.html

# The attributes DTD module contains the attributes element
# and its children, such as key and time signatures.

# Elements

# The attributes element contains musical information that
# typically changes on measure boundaries. This includes
# key and time signatures, clefs, transpositions, and staving.

element-attributes =
  element attributes {
    attlist-attributes,
    editorial,
    element-divisions?,
    element-key*,
    element-time*,
    element-staves?,
    element-part-symbol?,
    element-instruments?,
    element-clef*,
    element-staff-details*,
    element-transpose?,
    element-directive*,
    element-measure-style*
  }
attlist-attributes &= empty
# Traditional key signatures are represented by the number
# of flats and sharps, plus an optional mode for major/
# minor/mode distinctions. Negative numbers are used for
# flats and positive numbers for sharps, reflecting the
# key's placement within the circle of fifths (hence the
# element name). A cancel element indicates that the old
# key signature should be cancelled before the new one
# appears. This will always happen when changing to C major
# or A minor and need not be specified then. The cancel
# value matches the fifths value of the cancelled key
# signature (e.g., a cancel of -2 will provide an explicit
# cancellation for changing from B flat major to F major).
# The optional location attribute indicates whether the
# cancellation appears to the left or the right of the new
# key signature. It is left by default.
# 
# Non-traditional key signatures can be represented using
# the Humdrum/Scot concept of a list of altered tones.
# The key-step and key-alter elements are represented the
# same way as the step and alter elements are in the pitch
# element in the note.mod file. The different element names
# indicate the different meaning of altering notes in a scale
# versus altering a sounding pitch.
# 
# Valid mode values include major, minor, dorian, phrygian,
# lydian, mixolydian, aeolian, ionian, and locrian.
# 
# The optional number attribute refers to staff numbers, 
# from top to bottom on the system. If absent, the key
# signature applies to all staves in the part.
# 
# The optional list of key-octave elements is used to specify
# in which octave each element of the key signature appears.
# The content specifies the octave value using the same
# values as the display-octave element. The number attribute
# is a positive integer that refers to the key signature
# element in left-to-right order. If the cancel attribute is
# set to yes, then this number refers to an element specified
# by the cancel element. It is no by default.
element-key =
  element key {
    attlist-key,
    ((element-cancel?, element-fifths, element-mode?)
     | (element-key-step, element-key-alter)*),
    element-key-octave*
  }
attlist-key &=
  attribute number { text }?,
  print-style,
  print-object
element-cancel = element cancel { attlist-cancel, text }
attlist-cancel &= attribute location { left-right }?
element-fifths = element fifths { attlist-fifths, text }
attlist-fifths &= empty
element-mode = element mode { attlist-mode, text }
attlist-mode &= empty
element-key-step = element key-step { attlist-key-step, text }
attlist-key-step &= empty
element-key-alter = element key-alter { attlist-key-alter, text }
attlist-key-alter &= empty
element-key-octave = element key-octave { attlist-key-octave, text }
attlist-key-octave &=
  attribute number { xsd:NMTOKEN },
  attribute cancel { yes-no }?
# Musical notation duration is commonly represented as
# fractions. The divisions element indicates how many 
# divisions per quarter note are used to indicate a note's
# duration. For example, if duration = 1 and divisions = 2,
# this is an eighth note duration. Duration and divisions
# are used directly for generating sound output, so they
# must be chosen to take tuplets into account. Using a
# divisions element lets us use just one number to 
# represent a duration for each note in the score, while
# retaining the full power of a fractional representation.
# For maximum compatibility with Standard MIDI Files, the
# divisions value should not exceed 16383.
element-divisions = element divisions { attlist-divisions, text }
attlist-divisions &= empty
# Time signatures are represented by two elements. The
# beats element indicates the number of beats, as found in
# the numerator of a time signature. The beat-type element
# indicates the beat unit, as found in the denominator of
# a time signature. The symbol attribute is used to
# indicate another notation beyond a fraction: the common 
# and cut time symbols, as well as a single number with an
# implied denominator. Normal (a fraction) is the implied
# symbol type if none is specified. Multiple pairs of
# beat and beat-type elements are used for composite
# time signatures with multiple denominators, such as
# 2/4 + 3/8. A composite such as 3+2/8 requires only one
# beat/beat-type pair. A senza-misura element explicitly
# indicates that no time signature is present. 
# 
# The print-object attribute allows a time signature to be
# specified but not printed, as is the case for excerpts
# from the middle of a score. The value is "yes" if
# not present. The optional number attribute refers to staff
# numbers within the part, from top to bottom on the system. 
# If absent, the time signature applies to all staves in the 
# part.
element-time =
  element time {
    attlist-time,
    ((element-beats, element-beat-type)+ | element-senza-misura)
  }
attlist-time &=
  attribute number { text }?,
  attribute symbol { "common" | "cut" | "single-number" | "normal" }?,
  print-style,
  print-object
element-beats = element beats { attlist-beats, text }
attlist-beats &= empty
element-beat-type = element beat-type { attlist-beat-type, text }
attlist-beat-type &= empty
element-senza-misura =
  element senza-misura { attlist-senza-misura, empty }
attlist-senza-misura &= empty
# Staves are used if there is more than one staff
# represented in the given part (e.g., 2 staves for
# typical piano parts). If absent, a value of 1 is assumed.
# Staves are ordered from top to bottom in a part in
# numerical order, with staff 1 above staff 2.
element-staves = element staves { attlist-staves, text }
attlist-staves &= empty
# The part-symbol element indicates how a symbol for a
# multi-staff part is indicated in the score. Values include
# none, brace, line, and bracket; brace is the default. The
# top-staff and bottom-staff elements are used when the brace
# does not extend across the entire part. For example, in a
# 3-staff organ part, the top-staff will typically be 1 for
# the right hand, while the bottom-staff will typically be 2
# for the left hand. Staff 3 for the pedals is usually outside
# the brace.
element-part-symbol = element part-symbol { attlist-part-symbol, text }
attlist-part-symbol &=
  attribute top-staff { text }?,
  attribute bottom-staff { text }?,
  position,
  color
# Instruments are only used if more than one instrument is
# represented in the part (e.g., oboe I and II where they
# play together most of the time). If absent, a value of 1
# is assumed.
element-instruments = element instruments { attlist-instruments, text }
attlist-instruments &= empty
# Clefs are represented by the sign, line, and
# clef-octave-change elements. Sign values include G, F, C,
# percussion, TAB, and none. Line numbers are counted from
# the bottom of the staff. Standard values are 2 for the
# G sign (treble clef), 4 for the F sign (bass clef), 3 
# for the C sign (alto clef) and 5 for TAB (on a 6-line
# staff). The clef-octave-change element is used for
# transposing clefs (e.g., a treble clef for tenors would
# have a clef-octave-change value of -1). The optional 
# number attribute refers to staff numbers within the part,
# from top to bottom on the system. A value of 1 is 
# assumed if not present.
# 
# Sometimes clefs are added to the staff in non-standard
# line positions, either to indicate cue passages, or when
# there are multiple clefs present simultaneously on one
# staff. In this situation, the additional attribute is set to
# "yes" and the line value is ignored. The size attribute
# is used for clefs where the additional attribute is "yes".
# It is typically used to indicate cue clefs.
element-clef =
  element clef {
    attlist-clef,
    element-sign,
    element-line?,
    element-clef-octave-change?
  }
attlist-clef &=
  attribute number { text }?,
  attribute additional { yes-no }?,
  attribute size { symbol-size }?,
  print-style,
  print-object
element-sign = element sign { attlist-sign, text }
attlist-sign &= empty
element-line = element line { attlist-line, text }
attlist-line &= empty
element-clef-octave-change =
  element clef-octave-change { attlist-clef-octave-change, text }
attlist-clef-octave-change &= empty
# The staff-details element is used to indicate different
# types of staves. The staff-type element can be ossia,
# cue, editorial, regular, or alternate. An alternate staff
# indicates one that shares the same musical data as the
# prior staff, but displayed differently (e.g., treble and
# bass clef, standard notation and tab). The staff-lines
# element specifies the number of lines for non 5-line
# staffs. The staff-tuning and capo elements are used to
# specify tuning when using tablature notation. The optional
# number attribute specifies the staff number from top to
# bottom on the system, as with clef. The optional show-frets
# attribute indicates whether to show tablature frets as
# numbers (0, 1, 2) or letters (a, b, c). The default choice
# is numbers. The print-object attribute is used to indicate
# when a staff is not printed in a part, usually in large
# scores where empty parts are omitted. It is yes by default.
# If print-spacing is yes while print-object is no, the score
# is printed in cutaway format where vertical space is left
# for the empty part.
element-staff-details =
  element staff-details {
    attlist-staff-details,
    element-staff-type?,
    element-staff-lines?,
    element-staff-tuning*,
    element-capo?,
    element-staff-size?
  }
attlist-staff-details &=
  attribute number { text }?,
  attribute show-frets { "numbers" | "letters" }?,
  print-object,
  print-spacing
element-staff-type = element staff-type { attlist-staff-type, text }
attlist-staff-type &= empty
element-staff-lines = element staff-lines { attlist-staff-lines, text }
attlist-staff-lines &= empty
# The tuning-step, tuning-alter, and tuning-octave
# elements are defined in the common.mod file. Staff
# lines are numbered from bottom to top.
element-staff-tuning =
  element staff-tuning {
    attlist-staff-tuning,
    element-tuning-step,
    element-tuning-alter?,
    element-tuning-octave
  }
attlist-staff-tuning &= attribute line { text }
# The capo element indicates at which fret a capo should
# be placed on a fretted instrument. This changes the
# open tuning of the strings specified by staff-tuning
# by the specified number of half-steps.
element-capo = element capo { attlist-capo, text }
attlist-capo &= empty
# The staff-size element indicates how large a staff
# space is on this staff, expressed as a percentage of 
# the work's default scaling. Values less than 100 make
# the staff space smaller while values over 100 make the
# staff space larger. A staff-type of cue, ossia, or 
# editorial implies a staff-size of less than 100, but
# the exact value is implementation-dependent unless
# specified here. Staff size affects staff height only,
# not the relationship of the staff to the left and
# right margins.
element-staff-size = element staff-size { attlist-staff-size, text }
attlist-staff-size &= empty
# If the part is being encoded for a transposing instrument
# in written vs. concert pitch, the transposition must be
# encoded in the transpose element. The transpose element
# represents what must be added to the written pitch to get
# the correct sounding pitch.
# 
# The transposition is represented by chromatic steps
# (required) and three optional elements: diatonic pitch
# steps, octave changes, and doubling an octave down. The
# chromatic and octave-change elements are numeric values
# added to the encoded pitch data to create the sounding
# pitch. The diatonic element is also numeric and allows
# for correct spelling of enharmonic transpositions.
element-transpose =
  element transpose {
    attlist-transpose,
    element-diatonic?,
    element-chromatic,
    element-octave-change?,
    element-double?
  }
attlist-transpose &= empty
element-diatonic = element diatonic { attlist-diatonic, text }
attlist-diatonic &= empty
element-chromatic = element chromatic { attlist-chromatic, text }
attlist-chromatic &= empty
element-octave-change =
  element octave-change { attlist-octave-change, text }
attlist-octave-change &= empty
element-double = element double { attlist-double, empty }
attlist-double &= empty
# Directives are like directions, but can be grouped together 
# with attributes for convenience. This is typically used for
# tempo markings at the beginning of a piece of music. This
# element has been deprecated in Version 2.0 in favor of
# the directive attribute for direction elements. Language 
# names come from ISO 639, with optional country subcodes
# from ISO 3166.
element-directive = element directive { attlist-directive, text }
attlist-directive &=
  print-style,
  attribute xml:lang { xsd:NMTOKEN }?
# A measure-style indicates a special way to print partial
# to multiple measures within a part. This includes multiple
# rests over several measures, repeats of beats, single, or
# multiple measures, and use of slash notation.
# 
# The multiple-rest and measure-repeat symbols indicate the
# number of measures covered in the element content. The
# beat-repeat and slash elements can cover partial measures.
# All but the multiple-rest element use a type attribute to 
# indicate starting and stopping the use of the style. The
# optional number attribute specifies the staff number from
# top to bottom on the system, as with clef.
element-measure-style =
  element measure-style {
    attlist-measure-style,
    (element-multiple-rest
     | element-measure-repeat
     | element-beat-repeat
     | element-slash)
  }
attlist-measure-style &=
  attribute number { text }?,
  font,
  color
# The slash-type and slash-dot elements are optional children
# of the beat-repeat and slash elements. They have the same
# values as the type and dot elements, and define what the
# beat is for the display of repetition marks. If not present,
# the beat is based on the current time signature.
element-slash-type = element slash-type { attlist-slash-type, text }
attlist-slash-type &= empty
element-slash-dot = element slash-dot { attlist-slash-dot, empty }
attlist-slash-dot &= empty
# The text of the multiple-rest element indicates the number
# of measures in the multiple rest. Multiple rests may use
# the 1-bar / 2-bar / 4-bar rest symbols, or a single shape.
# The use-symbols attribute indicates which to use; it is no
# if not specified.
element-multiple-rest =
  element multiple-rest { attlist-multiple-rest, text }
attlist-multiple-rest &= attribute use-symbols { yes-no }?
# The measure-repeat and beat-repeat element specify a
# notation style for repetitions. The actual music being
# repeated needs to be repeated within the MusicXML file.
# These elements specify the notation that indicates the
# repeat.

# The measure-repeat element is used for both single and
# multiple measure repeats. The text of the element indicates
# the number of measures to be repeated in a single pattern.
# The slashes attribute specifies the number of slashes to
# use in the repeat sign. It is 1 if not specified. Both the
# start and the stop of the measure-repeat must be specified.
element-measure-repeat =
  element measure-repeat { attlist-measure-repeat, text }
attlist-measure-repeat &=
  attribute type { start-stop },
  attribute slashes { xsd:NMTOKEN }?
# The beat-repeat element is used to indicate that a single
# beat (but possibly many notes) is repeated. Both the start
# and stop of the beat being repeated should be specified.
# The slashes attribute specifies the number of slashes to
# use in the symbol. The use-dots attribute indicates whether
# or not to use dots as well (for instance, with mixed rhythm
# patterns). By default, the value for slashes is 1 and the
# value for use-dots is no.
element-beat-repeat =
  element beat-repeat {
    attlist-beat-repeat, (element-slash-type, element-slash-dot*)?
  }
attlist-beat-repeat &=
  attribute type { start-stop },
  attribute slashes { xsd:NMTOKEN }?,
  attribute use-dots { yes-no }?
# The slash element is used to indicate that slash notation
# is to be used. If the slash is on every beat, use-stems is
# no (the default). To indicate rhythms but not pitches,
# use-stems is set to yes. The type attribute indicates
# whether this is the start or stop of a slash notation
# style. The use-dots attribute works as for the beat-repeat
# element, and only has effect if use-stems is no.
element-slash =
  element slash {
    attlist-slash, (element-slash-type, element-slash-dot*)?
  }
attlist-slash &=
  attribute type { start-stop },
  attribute use-dots { yes-no }?,
  attribute use-stems { yes-no }?
